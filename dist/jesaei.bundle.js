(()=>{"use strict";var __webpack_modules__={860:()=>{eval("\n;// CONCATENATED MODULE: ./src/js/functions.js\nconst getDescriptionExcerpt = (episode) => {\n  const description = episode\n    .querySelector('description')\n    .innerHTML.replace('<![CDATA[', '')\n    .replace(']]>', '')\n    .replace(/\\<(?!p|br).*?\\>/g, '', '')\n    .replace(/\"/g, '&quot;')\n\n  const descriptionNoHtml = description.replace(/(<([^>]+)>)/gi, '')\n  const descriptionMaxLength = 114\n  const descriptionExcerpt =\n    descriptionNoHtml.length > descriptionMaxLength\n      ? descriptionNoHtml.substring(0, descriptionMaxLength)\n      : description\n  const hasDescriptionExcerpt =\n    description.length > descriptionMaxLength ? true : false\n  const descriptionExcerptHtml = hasDescriptionExcerpt\n    ? `<span class=\"podcast-description-show-more-btn\" data-full-description=\"${description}\">...</span>`\n    : ''\n\n  return descriptionExcerpt + descriptionExcerptHtml\n}\n\nconst getEpisodesToShow = (feed) => {\n  let episodes = feed.querySelectorAll('item')\n  // convert from node list to array\n  episodes = Array.from(episodes)\n  const maxEpisodes = jesaei_settings.max_episodes\n\n  if (maxEpisodes < episodes.length) {\n    episodes = episodes.slice(0, maxEpisodes)\n  }\n\n  return episodes\n}\n\nconst getTitleExcerpt = (episode) => {\n  // create an excerpt out of the title\n  const title = episode\n    .querySelector('title')\n    .innerHTML.replace('<![CDATA[', '')\n    .replace(']]>', '')\n  const titleMaxLength = 39\n  const titleExcerpt = title.substring(0, titleMaxLength) + '...'\n\n  return titleExcerpt\n}\n\nconst getEpisodeIframeUrl = (episode, siteUrl) => {\n  // Get position to split url for modification seen below\n  const urlModPosition = siteUrl.length\n  // add '/embed' to URL so that it works in an iframe\n  const originalURL = episode.querySelector('link').innerHTML\n  const pathToAdd = '/embed'\n  const revisedUrl = [\n    originalURL.slice(0, urlModPosition),\n    pathToAdd,\n    originalURL.slice(urlModPosition),\n  ].join('')\n\n  return revisedUrl\n}\n\nconst checkShowMoreBtnsExist = setInterval(() => {\n  if (\n    document.getElementsByClassName('podcast-description-show-more-btn').length\n  ) {\n    setShowMoreEvents()\n    clearInterval(checkShowMoreBtnsExist)\n  }\n}, 100) // check every 100ms\n\nconst setShowMoreEvents = () => {\n  const showMoreBtns = document.getElementsByClassName(\n    'podcast-description-show-more-btn'\n  )\n\n  for (let i = 0; i < showMoreBtns.length; i++) {\n    showMoreBtns[i].addEventListener('click', (e) => {\n      e = e || window.event\n      const target = e.target || e.srcElement\n      const description = target.dataset.fullDescription\n      target.parentElement.innerHTML = description\n    })\n  }\n}\n\nconst setPlayerIframeHeight = () => {\n  // set responsive breakpoint for the player iframe - adjust height\n  const anchorIframe = document.getElementById('jesaei-anchor-podcast-iframe')\n  const anchorIframeWidth = anchorIframe.offsetWidth\n  const loadingAnimation = document.getElementById(\n    'jesaei-player-loading-animation'\n  )\n\n  if (anchorIframeWidth > 768) {\n    anchorIframe.style.height = '161px'\n    loadingAnimation.style.top = '40px'\n  } else {\n    anchorIframe.style.height = '98px'\n    loadingAnimation.style.top = '10px'\n  }\n}\n\n;// CONCATENATED MODULE: ./src/js/main.js\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const siteUrl = jesaei_settings.site_url\n  const rssUrl = jesaei_settings.rss_url\n  const isProVersionActive = jesaei_settings.is_pro_version_active\n\n  if (!isProVersionActive) {\n    window.addEventListener('resize', setPlayerIframeHeight)\n    setPlayerIframeHeight()\n  }\n\n  fetch(rssUrl)\n    .then((response) => response.text())\n    .then((str) => new window.DOMParser().parseFromString(str, 'text/xml'))\n    .then((feed) => {\n      const episodes = getEpisodesToShow(feed)\n      const podcastListContainer = document.getElementById(\n        'jesaei-podcast-list-container'\n      )\n\n      if (episodes.length === 0) {\n        // hide episode container if there are no episodes\n        document.getElementById('jesaei-podcast-list-container').style.display =\n          'none'\n      }\n\n      for (const episode of episodes) {\n        const thumbnailUrl = episode.querySelector('image').getAttribute('href')\n        console.log(thumbnailUrl)\n        // const titleExcerpt = getTitleExcerpt(episode)\n        // const episodeIframeUrl = getEpisodeIframeUrl(episode, siteUrl)\n        // const audioUrl = episode.querySelector('enclosure').getAttribute('url')\n        // const descriptionExpcerpt = getDescriptionExcerpt(episode)\n        // const episodeLengthInMinutesAndSeconds =\n        //   episode.querySelector('duration').innerHTML\n        // const episodeDate = getEpisodeDate(episode)\n\n        // // Output the episode on the page with the data we have prepared\n        // podcastListContainer.innerHTML += `\n\t\t\t\t// <div class=\"styles__episodeFeedItem___1U6E2\">\n\t\t\t\t//   <a class=\"podcast-list-link styles__episodeImage___tMifW\" href=\"${episodeIframeUrl}\" target=\"jesaei_podcast_iframe\" data-audio-url=\"${audioUrl}\">\n\t\t\t\t// \t<img src=\"${thumbnailUrl}\">\n\t\t\t\t// \t<button class=\"styles__circle___1g-9u styles__white___372tQ styles__playButton___1Ivi4 styles__playButton___1uaGA\" aria-label=\"\" style=\"height: 31px; min-height: 31px; width: 31px; min-width: 31px; border-radius: 16px;\">\n\t\t\t\t// \t  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 0 11 12\" width=\"13\" height=\"13\"><rect width=\"12\" height=\"12\" fill=\"none\"></rect><path d=\"M1 .81v10.38a.76.76 0 0 0 .75.75.67.67 0 0 0 .39-.12l8.42-5.18a.75.75 0 0 0 0-1.28L2.14.18a.75.75 0 0 0-1 .24.79.79 0 0 0-.14.39z\" fill=\"#282F36\"></path></svg>\n\t\t\t\t// \t</button>\n\t\t\t\t//   </a>\n\t\t\t\t//   <a class=\"podcast-list-link\" href=\"${episodeIframeUrl}\" target=\"jesaei_podcast_iframe\" data-audio-url=\"${audioUrl}\">\n\t\t\t\t// \t<div class=\"styles__episodeHeading___29q7v\">\n\t\t\t\t// \t  <div>\n\t\t\t\t// \t\t<div>\n\t\t\t\t// \t\t  ${titleExcerpt}\n\t\t\t\t// \t\t</div>\n\t\t\t\t// \t  </div>\n\t\t\t\t// \t</div>\n\t\t\t\t//   </a>\n\t\t\t\t//   <div class=\"styles__episodeDescription___C3oZg \">\n\t\t\t\t// \t<div class=\"styles__expander___1NNVb styles__expander--dark___3Qxhe\">\n\t\t\t\t// \t  <div>\n\t\t\t\t// \t\t<div class=\"podcast-description\">\n\t\t\t\t// \t\t  ${descriptionExpcerpt}\n\t\t\t\t// \t\t</div>\n\t\t\t\t// \t  </div>\n\t\t\t\t// \t</div>\n\t\t\t\t//   </div>\n\t\t\t\t//   <div class=\"styles__episodeDuration___2I0Qb\">\n\t\t\t\t// \t${episodeLengthInMinutesAndSeconds}\n\t\t\t\t//   </div>\n\t\t\t\t//   <div class=\"styles__episodeCreated___1zP5p\">\n\t\t\t\t// \t${episodeDate}\n\t\t\t\t//   </div>\n\t\t\t\t// </div>\n\t\t\t  // `\n      }\n    })\n})\n\nconst getEpisodeDate = (episode) => {\n  // convert JSON ISO 8601 formatted date in to a readable date\n  const date = new Date(episode.querySelector('pubDate').innerHTML)\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  const month = monthNames[date.getMonth()]\n  const day = date.getDate()\n  const year = date.getFullYear()\n\n  return `${month}  ${day}, ${year}`\n}\n\n;// CONCATENATED MODULE: ./src/index.js\n\n// import \"./js/feednami-client-v1.1.js\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///860\n")}},__webpack_exports__={};__webpack_modules__[860]()})();